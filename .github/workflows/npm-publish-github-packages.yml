# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: 发布 Node.js 包

on:
  release:
    types: [created]
  push:
    tags:
      - 'v*'  # 推送标签如 v1.0, v1.1, v20.15.10 时触发
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'  # 缓存 npm 依赖加速构建
      - run: npm ci
      - run: npm run test --if-present || echo "没有测试脚本，跳过测试"

  publish-gpr:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/
          scope: '@YOUR_USERNAME'  # 替换为你的 GitHub 用户名或组织名称
      - run: npm ci
      - name: 配置发布信息
        run: |
          # 获取仓库所有者名称
          OWNER=$(echo "$GITHUB_REPOSITORY" | cut -d '/' -f 1)
          # 更新 package.json
          if [ -f "package.json" ]; then
            # 检查是否存在 name 字段，如不存在或不以 @ 开头，则添加作用域
            if ! grep -q '"name"' package.json || ! grep -q '"name": *"@' package.json; then
              PKG_NAME=$(node -p "require('./package.json').name || ''")
              if [ -n "$PKG_NAME" ] && [[ $PKG_NAME != @* ]]; then
                npm pkg set name="@$OWNER/$PKG_NAME"
              elif [ -z "$PKG_NAME" ]; then
                REPO_NAME=$(echo "$GITHUB_REPOSITORY" | cut -d '/' -f 2)
                npm pkg set name="@$OWNER/$REPO_NAME"
              fi
            fi
            # 添加发布配置
            npm pkg set publishConfig.registry=https://npm.pkg.github.com/
            npm pkg set publishConfig.access=restricted
          fi
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
